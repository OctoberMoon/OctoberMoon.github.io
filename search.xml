<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Linux服务器使用ssh连接]]></title>
    <url>%2F2019%2F05%2F28%2FLinux%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8ssh%E8%BF%9E%E6%8E%A5%2F</url>
    <content type="text"><![CDATA[优秀的人，不是不合群，而是他们合群的人里面没有你 Linux服务器使用ssh连接参考资料 SSH的工作原理是将客户端程序连接到ssh服务器 Ubuntu(Centors类似 命令有所不同) 123456781.主配置文件于/etc/ssh/sshd_config2.Port 22 端口声明指定sshd服务器将侦听连接的端口 如需更改端口 直接添加后 测试完成 再删除 223.PermitRootLogin 选择是否允许root登录4.LoginGraceTime 指定在未成功登录的情况下保持连接活动的秒数sudo service ssh restart 重启服务sudo systemctl restart ssh 如何使用密钥登录SSH1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556 [root@7S ssh]# systemctl stop firewalld.service //关闭防火墙 [root@7S ssh]# systemctl is-enabled firewalld.service //查看防火墙状态 enabled [root@7S ssh]# firewall-cmd --zone=public --add-port=1212/tcp --permanent 添加 放行端口 1212 FirewallD is not running // 防火墙关闭 [root@7S ssh]# systemctl restart firewalld.service //启动 [root@7S ssh]# firewall-cmd --zone=public --add-port=1212/tcp --permanent //继续添加 success firewall-cmd --zone=public --list-ports //查看所有端口* 创建SSH密钥(本地的计算机上生成SSH密钥)ssh-keygen -t rsa //创建按 Enter 键接受默认值 (Mac)密钥在〜/.ssh/id_rsa.pub和〜/.ssh / id_rsa中 (window 系统不一样 Admin文件名不一样) /C/users/Admin/.ssh/id_rsassh-copy-id root@192.168.100.00 //将公钥复制到远程服务器 输入密码 下次不需要使用密码 即可登录更改 端口 登录ssh -p 1212 root@192.168.100.00 安全考虑 禁用密码验证/etc/ssh/sshd_configPasswordAuthentication no //去掉注释 改为 noPubkeyAuthentication yes // 默认不修改ChallengeResponseAuthentication no // 默认不修改sudo systemctl restart ssh //重启服务 如有错误 关闭SELinux 或者 向SELinux中添加修改的SSH端口(如下)1. 安装semanagesemanage是SELinux的管理工具，是用于向SELinux添加和修改ssh端口号* 安装依赖 yum install policycoreutils-python* 安装semanage yum provides semanage2:使用semanage向SELinux中添加我们刚刚添加的端口号(1212)查询当前 ssh 服务端口: semanage port -l | grep ssh向 SELinux 中添加我们需要添加的ssh端口(1212): semanage port -a -t ssh_port_t -p tcp 1212验证 ssh 端口是否添加成功: semanage port -l | grep ssh重启 ssh 服务: systemctl restart sshd.service第二种方法:1. ssh-copy-id -i ~/.ssh/id_rsa.pub root@192.168.100.000 //将本机的id_rsa.pub公钥文件内容复制到远程目标机的.ssh/authorized_keys文件中2. 本地复制: scp .ssh/id_rsa.pub user@192.168.1.100:/home/root/ 服务器操作: mkdir -p /home/root/.ssh/ mv /home/root/id_rsa.pub /home/root/.ssh/authorized_keys //authorized_keys 必须如此命名 登录即可]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linix</tag>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F05%2F28%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
